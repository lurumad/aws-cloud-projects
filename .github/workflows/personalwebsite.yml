name: Personal Website CI/CD

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ASSETS_BUCKET_NAME: personal-web-site-oacbucket

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20.0.0"
      - name: Set up AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
          aws --version
      - name: Install AWS CDK
        run: |
          npm install -g aws-cdk
          cdk --version
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GithubActionsSession
      - name: Install dependencies
        run: |
          cd personal-web-site
          npm install
      - name: CDK Bootstrap
        run: |
          cd personal-web-site
          npx cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ env.AWS_REGION }}
      - name: Import Certificate
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          CERTIFICATE: ${{ secrets.CERTIFICATE }}
        run: |
          echo "$PRIVATE_KEY" > private_key.key
          echo "$CERTIFICATE" > certificate.cer

          ls -l

          EXISTING_CERT_ARN=$(aws acm list-certificates \
              --query "CertificateSummaryList[?DomainName=='*.luisruizpavon.com'].CertificateArn" \
              --output text)

          if [ -z "$EXISTING_CERT_ARN" ]; then
            echo "Importing certificate..."
            
            CERTIFICATE_ARN=$(aws acm import-certificate \
                --certificate fileb://certificate.cer \
                --private-key fileb://private_key.key \
                --query "CertificateArn" \
                --output text)

            aws ssm put-parameter \
                --name "/web/certificateArn" \
                --value "$CERTIFICATE_ARN" \
                --type String

            rm -f private_key.key certificate.cer

            echo "Certificate imported and stored in SSM Parameter Store."
          fi
      - name: CDK Deploy
        run: |
          cd personal-web-site
          npx cdk deploy PersonalWebSiteStack --require-approval never
      - name: Copy assets
        run: |
          aws s3 cp personal-web-site/assets s3://${{ env.ASSETS_BUCKET_NAME }}/ --recursive
